CREATE TABLE iron_chef (id INTEGER PRIMARY KEY AUTOINCREMENT,
     first_name TEXT,
     last_name TEXT);


INSERT INTO iron_chef (first_name, last_name) VALUES ('Mario', 'Batali');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Cat', 'Cora');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Bobby', 'Flay');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Marc', 'Forgione');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Jose', 'Garces');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Alex', 'Guarnaschelli');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Masaharu', 'Morimoto');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Wolfgang', 'Puck');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Michael', 'Symon');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Geoffrey', 'Zakarian');
INSERT INTO iron_chef (first_name, last_name) VALUES ('Stephanie', 'Izard');


CREATE TABLE season (id INTEGER PRIMARY KEY,
    season_id INTEGER,
    seasons INTEGER);
    
    
INSERT INTO season (season_id, seasons) VALUES (1, 13);
INSERT INTO season (season_id, seasons) VALUES (2, 10);
INSERT INTO season (season_id, seasons) VALUES (3, 12);
INSERT INTO season (season_id, seasons) VALUES (4, 3);
INSERT INTO season (season_id, seasons) VALUES (5, 5);
INSERT INTO season (season_id, seasons) VALUES (6, 2);
INSERT INTO season (season_id, seasons) VALUES (7, 13);
INSERT INTO season (season_id, seasons) VALUES (8, NULL);
INSERT INTO season (season_id, seasons) VALUES (9, 3);
INSERT INTO season (season_id, seasons) VALUES (10, 3);
INSERT INTO season (season_id, seasons) VALUES (11, 1);


CREATE TABLE speciality (id INTEGER PRIMARY KEY,
    special_id INTEGER,
    special TEXT);
    
INSERT INTO speciality (special_id, special) VALUES (1, 'Italian');
INSERT INTO speciality (special_id, special) VALUES (2, 'greek & mediterranean');
INSERT INTO speciality (special_id, special) VALUES (3, 'southwestern');
INSERT INTO speciality (special_id, special) VALUES (4, 'modern_american');
INSERT INTO speciality (special_id, special) VALUES (5, 'latin_fusion');
INSERT INTO speciality (special_id, special) VALUES (6, 'modern_american');
INSERT INTO speciality (special_id, special) VALUES (7, 'japanese');
INSERT INTO speciality (special_id, special) VALUES (8, 'california_cuisine');
INSERT INTO speciality (special_id, special) VALUES (9, 'mediterranean');
INSERT INTO speciality (special_id, special) VALUES (10, 'modern_american');
INSERT INTO speciality (special_id, special) VALUES (11, 'modern_american');


CREATE TABLE stats (id INTEGER PRIMARY KEY,
    chef_id INTEGER,
    win INTEGER,
    loss INTEGER,
    draw INTEGER,
    total INTEGER,
    win_percentage INTEGER);
    
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (1,19,5,0,24,79.2);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (2,21,12,1,34,63.2);
INSERT INTO stats(chef_id, win, loss, draw, total, win_percentage) VALUES (3,43,16,2,61,72.1);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (4,8,7,0,15,53.0);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (5,16,7,0,23,69.6);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (6,7,4,0,11,63.6);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (7,26,17,1,44,60.2);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (8,1,0,0,1,100);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (9,34,7,1,42,82.1);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (10,9,5,0,14,64.3);
INSERT INTO stats (chef_id, win, loss, draw, total, win_percentage) VALUES (11,2,0,0,2,100);

-- can you show me how many seasons each chef was in total?

SELECT first_name, last_name, seasons FROM iron_chef LEFT JOIN season ON iron_chef.id = season.season_id;



--can you show me all the iron chefs that had more than 5 seasons under their belt?



SELECT first_name, last_name, seasons FROM iron_chef LEFT JOIN season ON iron_chef.id = season.season_id WHERE seasons >=5;



-- how many iron chefs have a modern american speciality and who are they?



SELECT first_name, last_name, special FROM iron_chef LEFT JOIN speciality ON iron_chef.id = speciality.special_id WHERE special = 'modern_american' GROUP BY first_name;



-- show me the names of the iron chefs that have a win percentage over 70%.



SELECT first_name, last_name, win_percentage FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id WHERE win_percentage > 70 ORDER BY win_percentage desc;



-- how many iron chefs have won over 20 competitions?



SELECT first_name, last_name, win FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id WHERE win > 20 ORDER BY win asc;



-- how many iron chefs have won under 20 competitions?*/



SELECT first_name, last_name, win FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id WHERE win < 20 ORDER BY win asc;



-- who were they iron chefs that ended some of their matches in a draw?



SELECT first_name, last_name, draw FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id WHERE draw > 0 ORDER BY draw;



-- who were the iron chefs that have never drawed before?



SELECT first_name, last_name, draw FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id WHERE draw = 0 ORDER BY draw;



-- which iron chefs have a total score over 35?



SELECT first_name, last_name, total FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id WHERE total >=35 ORDER BY total asc;



-- which iron chefs have a total score less than 20?



SELECT first_name, last_name, total FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id WHERE total <=20 ORDER BY total asc;



-- show me each iron chefs specialty, who that are, and their win percentage?



SELECT first_name, last_name, special, win, win_percentage FROM iron_chef JOIN speciality ON iron_chef.id = speciality.special_id
JOIN stats ON iron_chef.id = stats.chef_id GROUP BY win_percentage;



 --show me how many wins the modern american speciality has won



SELECT special, SUM(win) FROM speciality JOIN stats ON speciality.special_id = stats.chef_id;



-- show me each iron chefs name, special, and how many losses they've each had while competing



SELECT first_name, last_name, special, loss FROM iron_chef JOIN speciality ON iron_chef.id = speciality.special_id JOIN stats ON iron_chef.id = stats.chef_id;



-- show me each iron chef and their win percentage, with how many total seasons they competed in.



SELECT first_name, last_name, seasons, win_percentage FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id JOIN season ON iron_chef.id = season.season_id;



-- show me which iron chefs that have never lost and only them with all of their stats.



SELECT * FROM iron_chef JOIN stats ON iron_chef.id = stats.chef_id WHERE loss = 0;



-- show me the iron chefs that were in the very last season of the show with all of their final stats.



SELECT first_name, last_name, seasons, win, loss, draw, total, win_percentage FROM iron_chef JOIN season ON iron_chef.id = season.season_id JOIN stats ON iron_chef.id = stats.chef_id WHERE seasons = 13;


